Architektury Výpočetních Systémů (AVS 2019)
Projekt č. 2 (PMC)
Login: xharmi00


Úloha 1: Paralelizace původního řešení
================================================================================

1) Kterou ze smyček (viz zadání) je vhodnější paralelizovat a co způsobuje
   neefektivitu paralelizace té druhé?

- Vhodnější je paralelizovat smyčku průchodu mřížkou v 'marchCubes'.
  Neefektivitu paralelizace druhé smyčky (výpočet minimální vzdálenosti
  v 'evaluateFieldAt') pravděpodobně způsobuje lokalia dat.


2) Jaké plánování (rozdělení práce mezi vlákna) jste zvolili a proč?
   Jaký vliv má velikost "chunk" při dynamickém plánování (8, 16, 32, 64)?

- Při testování a měření všech třech způsobů plánování (static, dynamic
  a guided), i s různými velikostmi "chunk" (1, 8, 16, 32, 64), jsem
  nezaznamenal žádný výrazný rozdíl ve výkonu. Zvolil jsem tedy dynamické
  plánování 'dynamic', protože provedení iterací obecně trvá různě dlouhou dobu.
  Tímto bude zajištěno vyvážení zátěže. Pro velikost "chunk" jsem zvolil hodnotu
  32, abych snížil synchronizační režii za běhu.


3) Jakým způsobem zajišťujete ukládání trojúhelníků z několika vláken současně?

- Zajišťuji to synchronizací vláken vzájemným vyloučením přidávání trojúhelníků
  do pole všech trojúhelníků v metodě 'emitTriangle'. Toto přidávání
  označuji jako kritickou sekci OpenMP direktivou '#pragma omp critical'.


Úloha 2: Paralelní průchod stromem
================================================================================

1) Stručně popište použití OpenMP tasků ve vašem řešení.

-


2) Jakým způsobem jste realizovali sesbírání celkového počtu trojúhelníků?

-


3) Jaký vliv má na vaše řešení tzv. "cut-off"? Je vhodné vytvářet nový
   task pro každou krychli na nejnižší úrovni?

-


4) Jakým způsobem zajišťujete ukládání trojúhelníků z několika vláken současně?

-


Úloha 3: Grafy škálování obou řešení
================================================================================

1) Stručně zhodnoťte efektivitu vytvořených řešení (na základě grafů
   škálování).

2) V jakém případě (v závislosti na počtu bodů ve vstupním souboru a velikosti
   mřížky) bude vaše řešení 1. úlohy neefektivní? (pokud takový případ
   existuje)

3) Je (nebo není) stromový algoritmus efektivnější z pohledu slabého škálování
   vzhledem ke vstupu?
